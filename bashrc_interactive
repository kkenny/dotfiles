# See if we've got the san homedir available
if [ -d "$HOME/homedir/bin" ] ; then
    PATH="$HOME/homedir/bin:$PATH"
fi
if [ -d "$HOME/bin" ] ; then
    PATH="$HOME/bin:$PATH"
fi
# Include the npm path if it exists (OSX brew install node)
if [ -d "/usr/local/share/npm/bin" ] ; then
	PATH="$PATH:/usr/local/share/npm/bin"
fi
PATH="/usr/local/bin:/usr/local/sbin:$PATH"

# set vi mode
set -o vi
# append to history
shopt -s histappend
# increase history file size
HISTSIZE=10000
HISTFILESIZE=20000
# reset window size after each command
shopt -s checkwinsize

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# show the git branch on the command promp
parse_git_branch() {
  git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ ⭠ \1/'
}

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "$debian_chroot" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# .mysql_credentials [ hostname port username password ]
function mysql_credentials {
	if [ ! -f $1 ] ; then
		return
	fi
	local mysql_host=`awk '{ print $1 }' $1`
	local mysql_port=`awk '{ print $2 }' $1`
	local mysql_user=`awk '{ print $3 }' $1`
	local mysql_pass=`awk '{ print $4 }' $1`
	alias mysql="mysql           --host=$mysql_host --port=$mysql_port --user=$mysql_user --password=$mysql_pass "
	alias mysqlshow="mysqlshow   --host=$mysql_host --port=$mysql_port --user=$mysql_user --password=$mysql_pass "
	alias mysqladmin="mysqladmin --host=$mysql_host --port=$mysql_port --user=$mysql_user --password=$mysql_pass "
	alias mysqldump="mysqldump   --host=$mysql_host --port=$mysql_port --user=$mysql_user --password=$mysql_pass "
}
mysql_credentials $HOME/.mysql_credentials

alias more=less
alias ls1="/bin/ls -1 --color=none --group-directories-first "
export EDITOR=vim
export LS_COLORS='no=00:fi=00:di=01;32:ln=01;36:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arj=01;31:*.taz=01;31:*.lzh=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.gz=01;31:*.bz2=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.php=01;35:*.tiff=01;35:*.png=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.avi=01;35:*.fli=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.ogg=01;35:*.mp3=01;35:*.wav=01;35:';
shell_is_osx && export LSCOLORS=Exfxcxdxbxegedabagacad
shell_is_osx && export CLICOLOR=true

# Give us a red prompt if this machine is flagged as production
if [ -f $HOME/.production ] ; then
	export PS1='${debian_chroot:+($debian_chroot)}\[\033[01;31m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]$(parse_git_branch) \e[1;33m⚡\033[00m '
else
	export PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]$(parse_git_branch) \e[1;33m⚡\033[00m '
fi

if shell_is_osx ; then
	mvim() {
		/Applications/MacVim.app/Contents/MacOS/MacVim "$PWD/$1" &
	}
	# Someday OSX will default to HashKnownHosts yes, until then...
	# Gather up useful completions from files in ~/.ssh (for keys) and Host lines in the ssh config
	complete -W "$(echo $(cat ~/.ssh/known_hosts | cut -d " " -f1 | cut -d "," -f1 | sort -u )) $(echo $(ls -1 ~/.ssh/ | sort)) $(echo $(cat ~/.ssh/config  | grep '^Host' | grep -v "\*" | awk '{ print $2 }'))" ssh
fi
if shell_is_linux ; then
	alias ls="/bin/ls -Alh --color=auto --group-directories-first "
	# /etc/hosts is better than nothing, depending on the environment
	# Gather up useful completions from files in ~/.ssh (for keys) and Host lines in the ssh config
	complete -W "$(echo $(cat /etc/hosts | grep -v ^# | cut -d " " -f2- | sed 's/ /\n/g' | sort -u)) $(echo $(ls -1 ~/.ssh/ | sort)) $(echo $(cat ~/.ssh/config  | grep '^Host' | grep -v "\*" | awk '{ print $2 }'))" ssh
fi

alias p='pushd'
alias o='popd'
alias gitlog="git log --graph --pretty=format':%C(yellow)%h%Cblue%d%Creset %s %C(white) %an, %ar%Creset'"

#export PATH=/opt/local/bin:$PATH:$HOME/bin:$HOME/.rvm/bin # TODO osx specific
[[ -s "$HOME/.rvm/scripts/rvm" ]] && . "$HOME/.rvm/scripts/rvm" # This loads RVM into a shell session.
