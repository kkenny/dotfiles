#!/bin/bash

## Where is event scripts?
EVENT_SCRIPTS_PATH="${HOME}/src/dotfiles/EventScripts"

## Power Savings
# Plugged in timeouts
PLUGGED_IN_MONITOR_TIMEOUT="60" ## IN MINUTES
PLUGGED_IN_SLEEP_TIMEOUT="180"	## IN MINUTES

# Unplugged timouts
UNPLUGGED_MONITOR_TIMEOUT="15"	## IN MINUTES
UNPLUGGED_SLEEP_TIMEOUT="20"	## IN MINUTES

# Dim the monitor when unplugged?
DIM_MONITOR_WHEN_UNPLUGGED=1	## 1=true 2=false

## Security
# Re-auth filevault after standby?
FILEVAULT_REAUTH=1		## 1=true 2=false
PASSWORD_DELAY=30		## Delay after screen saver to ask for password, in seconds

## UI/UX
ENABLE_MENUBAR_TRANSPARENCY=false
SHOW_BATTERY_TIME="YES"
SHOW_BATTERY_PERCENTAGE="YES"
SHOW_BT_MENU=true
SHOW_AIRPORT_MENU=true
SHOW_BATTERY_MENU=true
SHOW_CLOCK=true

SHOW_SCROLLBAR="WhenScrolling"	## Can be "Automatic", "Always", or "WhenScrolling"
ENABLE_WINDOW_ANIMATIONS=true
EXPAND_SAVE_PANEL=true
EXPAND_PRINT_PANEL=true
SAVE_TO_ICLOUD=true		## Default behavior, set to false to save to disk by default

UPDATE_FREQUENCY=14		## Frequency to check for updates, in days

ENABLE_NATURAL_SCROLLING=false
SCREEN_SHOT_LOCATION="${HOME}/screenshots"
SCREEN_SHOT_FORMAT="PNG"	## options: PNG, BMP, GIF, JPG, PDF, TIFF

export MY_HOSTNAME=$(/bin/hostname -s)

# Make airport command line tool easy to use
[[ -f "/System/Library/PrivateFrameworks/Apple80211.framework/Versions/Current/Resources/airport /usr/sbin/airport" ]] && \
sudo ln -s /System/Library/PrivateFrameworks/Apple80211.framework/Versions/Current/Resources/airport /usr/sbin/airport

# Put event scripts directory in the right place
if [[ -d $EVENT_SCRIPTS_PATH ]]; then
  [[ ! -d ${HOME}/Library/Application\ Scripts ]] && mkdir -p ${HOME}/Library/Application\ Scripts
  ln -s $EVENT_SCRIPTS_PATH ${HOME}/Library/Application\ Scripts/net.mousedown.EventScripts
fi

# this came from https://github.com/mathiasbynens/dotfiles
# http://mths.be/osx

# Ask for the administrator password upfront and (hopefully) temporarily cache it
#  If it won't cache, you could do something like:
#  `read -s -p "Password for sudo: " sudo_pass`
#  Then, when running sudo, do:
#  `echo $sudo_pass | sudo -s command --with args`
sudo -v

# Keep-alive: update existing `sudo` time stamp until `.osx` has finished
#while true; do sudo -n true; sleep 60; kill -0 "$$" || exit; done 2>/dev/null &

###############################################################################
# General UI/UX                                                               #
###############################################################################

# Set computer name (as done via System Preferences → Sharing)
## ITHD DOESN'T LIKE THIS
#sudo scutil --set ComputerName "${MY_HOSTNAME}"
#sudo scutil --set HostName "${MY_HOSTNAME}"
#sudo scutil --set LocalHostName "${MY_HOSTNAME}"
#sudo defaults write /Library/Preferences/SystemConfiguration/com.apple.smb.server NetBIOSName -string "$MY_HOSTNAME"

# plugged in, sleep monitor at 1hr, machine at 3hr
sudo pmset -c displaysleep $PLUGGED_IN_MONITOR_TIMEOUT
sudo pmset -c sleep $PLUGGED_IN_SLEEP_TIMEOUT
# unplugged sleep monitor at 4 minutes, machine at 8
sudo pmset -b displaysleep $UNPLUGGED_MONITOR_TIMEOUT
sudo pmset -b sleep $UNPLUGGED_SLEEP_TIMEOUT
# Dim the monitor when going on battery
sudo pmset -b lessbright $DIM_MONITOR_WHEN_UNPLUGGED
# Make the user re-auth file vault on wake from standby
sudo pmset -a destroyfvkeyonstandby $FILEVAULT_REAUTH

# Menu bar: disable transparency
defaults write NSGlobalDomain AppleEnableMenuBarTransparency -bool $ENABLE_MENUBAR_TRANSPARENCY

#echo "Menu bar: show remaining battery time (on pre-10.8); hide percentage"
defaults write com.apple.menuextra.battery ShowTime -string "${SHOW_BATTERY_TIME}"
defaults write com.apple.menuextra.battery ShowPercent -string "${SHOW_BATTERY_PERCENTAGE}"

# Menu bar: hide the useless Time Machine and Volume icons
## Build menu's to show
#[[ $SHOW_BT_MENU == true ]] && MENU="\"/System/Library/CoreServices/Menu\ Extras/Bluetooth.menu\""
#[[ $SHOW_AIRPORT_MENU == true ]] && MENU="${MENU}\ \"/System/Library/CoreServices/Menu\ Extras/AirPort.menu\""
#[[ $SHOW_BATTERY_MENU == true ]] && MENU="${MENU}\ \"/System/Library/CoreServices/Menu\ Extras/Battery.menu\""
#[[ $SHOW_CLOCK_MENU == true]] && MENU="${MENU}\ \"/System/Library/CoreServices/Menu\ Extras/Clock.menu\""
### WELL, THAT DIDN'T WORK
MENU='"/System/Library/CoreServices/Menu Extras/Bluetooth.menu" "/System/Library/CoreServices/Menu Extras/Bluetooth.menu" "/System/Library/CoreServices/Menu Extras/Battery.menu" "/System/Library/CoreServices/Menu Extras/Clock.menu"'

defaults write com.apple.systemuiserver menuExtras -array $MENU

# Set highlight color to orange
defaults write NSGlobalDomain AppleHighlightColor -string '1 0.631372 0'

# Set Finder sidebar icon size to medium
defaults write NSGlobalDomain NSTableViewDefaultSizeMode -int 2

# echo Always show scrollbars
defaults write NSGlobalDomain AppleShowScrollBars -string "${SHOW_SCROLLBAR}"

echo "Disable smooth scrolling"
echo "(Uncomment if you’re on an older Mac that messes up the animation)"
#defaults write NSGlobalDomain NSScrollAnimationEnabled -bool false

echo Disable opening and closing window animations
defaults write NSGlobalDomain NSAutomaticWindowAnimationsEnabled -bool $ENABLE_WINDOW_ANIMATIONS

echo Increase window resize speed for Cocoa applications
defaults write NSGlobalDomain NSWindowResizeTime -float 0.001

echo Expand save panel by default
defaults write NSGlobalDomain NSNavPanelExpandedStateForSaveMode -bool $EXPAND_SAVE_PANEL

echo Expand print panel by default
defaults write NSGlobalDomain PMPrintingExpandedStateForPrint -bool $EXPAND_PRINT_PANEL

echo "Save to disk (not to iCloud) by default"
defaults write NSGlobalDomain NSDocumentSaveNewDocumentsToCloud -bool $SAVE_TO_ICLOUD

echo "Automatically quit printer app once the print jobs complete"
defaults write com.apple.print.PrintingPrefs "Quit When Finished" -bool true

echo Disable the “Are you sure you want to open this application?” dialog
defaults write com.apple.LaunchServices LSQuarantine -bool false

echo Display ASCII control characters using caret notation in standard text views
echo Try e.g. `cd /tmp; unidecode "\x{0000}" > cc.txt; open -e cc.txt`
defaults write NSGlobalDomain NSTextShowsControlCharacters -bool true

echo Disable Resume system-wide
defaults write NSGlobalDomain NSQuitAlwaysKeepsWindows -bool false

echo Disable automatic termination of inactive apps
defaults write NSGlobalDomain NSDisableAutomaticTermination -bool true

echo Disable the crash reporter
#defaults write com.apple.CrashReporter DialogType -string "none"

echo Set Help Viewer windows to non-floating mode
defaults write com.apple.helpviewer DevMode -bool true

echo Reveal IP address, hostname, OS version, etc. when clicking the clock
echo in the login window
sudo defaults write /Library/Preferences/com.apple.loginwindow AdminHostInfo HostName

echo Restart automatically if the computer freezes
systemsetup -setrestartfreeze on

echo Never go into computer sleep mode
systemsetup -setcomputersleep Off > /dev/null

echo Check for software updates every $UPDATE_FREQUENCY days
defaults write com.apple.SoftwareUpdate ScheduleFrequency -int $UPDATE_FREQUENCY

echo Disable Notification Center and remove the menu bar icon
launchctl unload -w /System/Library/LaunchAgents/com.apple.notificationcenterui.plist

###############################################################################
echo Trackpad, mouse, keyboard, Bluetooth accessories, and input                 #
###############################################################################

echo Trackpad: enable tap to click for this user and for the login screen
defaults write com.apple.driver.AppleBluetoothMultitouch.trackpad Clicking -bool true
defaults -currentHost write NSGlobalDomain com.apple.mouse.tapBehavior -int 1
defaults write NSGlobalDomain com.apple.mouse.tapBehavior -int 1

echo Trackpad: map bottom right corner to right-click
defaults write com.apple.driver.AppleBluetoothMultitouch.trackpad TrackpadCornerSecondaryClick -int 2
defaults write com.apple.driver.AppleBluetoothMultitouch.trackpad TrackpadRightClick -bool true
defaults -currentHost write NSGlobalDomain com.apple.trackpad.trackpadCornerClickBehavior -int 1
defaults -currentHost write NSGlobalDomain com.apple.trackpad.enableSecondaryClick -bool true

echo Trackpad: swipe between pages with three fingers
defaults write NSGlobalDomain AppleEnableSwipeNavigateWithScrolls -bool true
defaults -currentHost write NSGlobalDomain com.apple.trackpad.threeFingerHorizSwipeGesture -int 1
defaults write com.apple.driver.AppleBluetoothMultitouch.trackpad TrackpadThreeFingerHorizSwipeGesture -int 1

echo 'Disable “natural” (Lion-style) scrolling'
defaults write NSGlobalDomain com.apple.swipescrolldirection -bool $ENABLE_NATURAL_SCROLLING

echo Increase sound quality for Bluetooth headphones/headsets
defaults write com.apple.BluetoothAudioAgent "Apple Bitpool Min (editable)" -int 40

echo Enable full keyboard access for all controls
echo '(e.g. enable Tab in modal dialogs)'
defaults write NSGlobalDomain AppleKeyboardUIMode -int 3

echo Enable access for assistive devices
echo -n 'a' | sudo tee /private/var/db/.AccessibilityAPIEnabled > /dev/null 2>&1
sudo chmod 444 /private/var/db/.AccessibilityAPIEnabled
echo 'TODO: avoid GUI password prompt somehow (http://apple.stackexchange.com/q/60476/4408)'
#sudo osascript -e 'tell application "System Events" to set UI elements enabled to true'

echo 'Use scroll gesture with the Ctrl (^) modifier key to zoom'
defaults write com.apple.universalaccess closeViewScrollWheelToggle -bool true
defaults write com.apple.universalaccess HIDScrollZoomModifierMask -int 262144
echo Follow the keyboard focus while zoomed in
defaults write com.apple.universalaccess closeViewZoomFollowsFocus -bool true

echo Disable press-and-hold for keys in favor of key repeat
defaults write NSGlobalDomain ApplePressAndHoldEnabled -bool false

echo Set a blazingly fast keyboard repeat rate
defaults write NSGlobalDomain KeyRepeat -int 0

echo Automatically illuminate built-in MacBook keyboard in low light
defaults write com.apple.BezelServices kDim -bool true
echo Turn off keyboard illumination when computer is not used for 5 minutes
defaults write com.apple.BezelServices kDimTime -int 300

echo Set language and text formats
echo 'Note: if you’re in the US, replace `EUR` with `USD`, `Centimeters` with'
echo '`Inches`, `en_GB` with `en_US`, and `true` with `false`.'
defaults write NSGlobalDomain AppleLanguages -array "en"
defaults write NSGlobalDomain AppleLocale -string "en_US@currency=USD"
defaults write NSGlobalDomain AppleMeasurementUnits -string "Centimeters"
defaults write NSGlobalDomain AppleMetricUnits -bool true

echo 'Set the timezone; see `systemsetup -listtimezones` for other values'
systemsetup -settimezone "America/Indiana/Indianapolis" > /dev/null

echo Disable auto-correct
defaults write NSGlobalDomain NSAutomaticSpellingCorrectionEnabled -bool false

###############################################################################
echo Screen                                                                   #
###############################################################################

echo Require password immediately after sleep or screen saver begins
defaults write com.apple.screensaver askForPassword -int 1
defaults write com.apple.screensaver askForPasswordDelay -int $PASSWORD_DELAY

echo Save screenshots to the desktop
[[ ! -d "${SCREEN_SHOT_LOCATION}" ]] && mkdir -p ${SCREEN_SHOT_LOCATION}
defaults write com.apple.screencapture location -string "${SCREEN_SHOT_LOCATION}"

echo 'Save screenshots in PNG format (other options: BMP, GIF, JPG, PDF, TIFF)'
defaults write com.apple.screencapture type -string "${SCREEN_SHOT_FORMAT}"

echo Disable shadow in screenshots
defaults write com.apple.screencapture disable-shadow -bool true

echo Enable subpixel font rendering on non-Apple LCDs
defaults write NSGlobalDomain AppleFontSmoothing -int 2

echo 'Enable HiDPI display modes (requires restart)'
sudo defaults write /Library/Preferences/com.apple.windowserver DisplayResolutionEnabled -bool true

###############################################################################
echo Finder                                                                   #
###############################################################################

echo 'Finder: allow quitting via ⌘ + Q; doing so will also hide desktop icons'
defaults write com.apple.finder QuitMenuItem -bool true

echo 'Finder: disable window animations and Get Info animations'
defaults write com.apple.finder DisableAllAnimations -bool true

echo 'Show icons for hard drives, servers, and removable media on the desktop'
defaults write com.apple.finder ShowExternalHardDrivesOnDesktop -bool true
defaults write com.apple.finder ShowHardDrivesOnDesktop -bool true
defaults write com.apple.finder ShowMountedServersOnDesktop -bool true
defaults write com.apple.finder ShowRemovableMediaOnDesktop -bool true

echo 'Finder: show hidden files by default '
#defaults write com.apple.finder AppleShowAllFiles -bool true

echo 'Finder: show all filename extensions'
#defaults write NSGlobalDomain AppleShowAllExtensions -bool true

echo 'Finder: show status bar'
defaults write com.apple.finder ShowStatusBar -bool true

echo Finder: show path bar
defaults write com.apple.finder ShowPathBar -bool true

echo Finder: allow text selection in Quick Look
defaults write com.apple.finder QLEnableTextSelection -bool true

echo Display full POSIX path as Finder window title
defaults write com.apple.finder _FXShowPosixPathInTitle -bool true

echo When performing a search, search the current folder by default
defaults write com.apple.finder FXDefaultSearchScope -string "SCcf"

echo Disable the warning when changing a file extension
defaults write com.apple.finder FXEnableExtensionChangeWarning -bool false

echo Enable spring loading for directories
defaults write NSGlobalDomain com.apple.springing.enabled -bool true

echo Remove the spring loading delay for directories
defaults write NSGlobalDomain com.apple.springing.delay -float 0

echo Avoid creating .DS_Store files on network volumes
defaults write com.apple.desktopservices DSDontWriteNetworkStores -bool true

echo Disable disk image verification
defaults write com.apple.frameworks.diskimages skip-verify -bool true
defaults write com.apple.frameworks.diskimages skip-verify-locked -bool true
defaults write com.apple.frameworks.diskimages skip-verify-remote -bool true

echo Automatically open a new Finder window when a volume is mounted
defaults write com.apple.frameworks.diskimages auto-open-ro-root -bool true
defaults write com.apple.frameworks.diskimages auto-open-rw-root -bool true
defaults write com.apple.finder OpenWindowForNewRemovableDisk -bool true

echo Show item info near icons on the desktop and in other icon views
/usr/libexec/PlistBuddy -c "Set :DesktopViewSettings:IconViewSettings:showItemInfo true" ~/Library/Preferences/com.apple.finder.plist
/usr/libexec/PlistBuddy -c "Set :FK_StandardViewSettings:IconViewSettings:showItemInfo true" ~/Library/Preferences/com.apple.finder.plist
/usr/libexec/PlistBuddy -c "Set :StandardViewSettings:IconViewSettings:showItemInfo true" ~/Library/Preferences/com.apple.finder.plist

echo Show item info to the right of the icons on the desktop
/usr/libexec/PlistBuddy -c "Set DesktopViewSettings:IconViewSettings:labelOnBottom false" ~/Library/Preferences/com.apple.finder.plist

echo Enable snap-to-grid for icons on the desktop and in other icon views
/usr/libexec/PlistBuddy -c "Set :DesktopViewSettings:IconViewSettings:arrangeBy grid" ~/Library/Preferences/com.apple.finder.plist
/usr/libexec/PlistBuddy -c "Set :FK_StandardViewSettings:IconViewSettings:arrangeBy grid" ~/Library/Preferences/com.apple.finder.plist
/usr/libexec/PlistBuddy -c "Set :StandardViewSettings:IconViewSettings:arrangeBy grid" ~/Library/Preferences/com.apple.finder.plist

echo Increase grid spacing for icons on the desktop and in other icon views
/usr/libexec/PlistBuddy -c "Set :DesktopViewSettings:IconViewSettings:gridSpacing 100" ~/Library/Preferences/com.apple.finder.plist
/usr/libexec/PlistBuddy -c "Set :FK_StandardViewSettings:IconViewSettings:gridSpacing 100" ~/Library/Preferences/com.apple.finder.plist
/usr/libexec/PlistBuddy -c "Set :StandardViewSettings:IconViewSettings:gridSpacing 100" ~/Library/Preferences/com.apple.finder.plist

echo Increase the size of icons on the desktop and in other icon views
/usr/libexec/PlistBuddy -c "Set :DesktopViewSettings:IconViewSettings:iconSize 80" ~/Library/Preferences/com.apple.finder.plist
/usr/libexec/PlistBuddy -c "Set :FK_StandardViewSettings:IconViewSettings:iconSize 80" ~/Library/Preferences/com.apple.finder.plist
/usr/libexec/PlistBuddy -c "Set :StandardViewSettings:IconViewSettings:iconSize 80" ~/Library/Preferences/com.apple.finder.plist

echo Use list view in all Finder windows by default
echo Four-letter codes for the other view modes: `icnv`, `clmv`, `Flwv`
defaults write com.apple.finder FXPreferredViewStyle -string "Nlsv"

echo Disable the warning before emptying the Trash
defaults write com.apple.finder WarnOnEmptyTrash -bool false

echo Empty Trash securely by default
defaults write com.apple.finder EmptyTrashSecurely -bool true

echo Enable AirDrop over Ethernet and on unsupported Macs running Lion
defaults write com.apple.NetworkBrowser BrowseAllInterfaces -bool true

echo Enable the MacBook Air SuperDrive on any Mac
sudo nvram boot-args="mbasd=1"

echo Show the ~/Library folder
chflags nohidden ~/Library

echo Remove Dropbox’s green checkmark icons in Finder
file=/Applications/Dropbox.app/Contents/Resources/check.icns
[ -e "$file" ] && mv -f "$file" "$file.bak"
unset file

###############################################################################
echo Dock, Dashboard, and hot corners                                            #
###############################################################################

echo 'Enable highlight hover effect for the grid view of a stack (Dock)'
defaults write com.apple.dock mouse-over-hilite-stack -bool true

echo Set the icon size of Dock items to 36 pixels
defaults write com.apple.dock tilesize -int 36

echo Enable spring loading for all Dock items
defaults write com.apple.dock enable-spring-load-actions-on-all-items -bool true

echo Show indicator lights for open applications in the Dock
defaults write com.apple.dock show-process-indicators -bool true

echo 'Wipe all (default) app icons from the Dock'
echo This is only really useful when setting up a new Mac, or if you don’t use
echo the Dock to launch apps.
#defaults write com.apple.dock persistent-apps -array

echo 'Don’t animate opening applications from the Dock'
defaults write com.apple.dock launchanim -bool false

echo Speed up Mission Control animations
defaults write com.apple.dock expose-animation-duration -float 0.1

echo 'Don’t group windows by application in Mission Control'
echo '(i.e. use the old Exposé behavior instead)'
defaults write com.apple.dock expose-group-by-app -bool false

echo 'Don’t show Dashboard as a Spacer'
defaults write com.apple.dock dashboard-in-overlay -bool true

echo Disable Dashboard
defaults write com.apple.dashboard mcx-disabled -bool true

echo Remove the auto-hiding Dock delay
defaults write com.apple.dock autohide-delay -float 0
echo Remove the animation when hiding/showing the Dock
defaults write com.apple.dock autohide-time-modifier -float 0

echo Enable the 2D Dock
#defaults write com.apple.dock no-glass -bool true

echo Automatically hide and show the Dock
defaults write com.apple.dock autohide -bool true

echo Make Dock icons of hidden applications translucent
defaults write com.apple.dock showhidden -bool true

echo Reset Launchpad
find ~/Library/Application\ Support/Dock -name "*.db" -maxdepth 1 -delete

echo Add iOS Simulator to Launchpad
ln -s /Applications/Xcode.app/Contents/Applications/iPhone\ Simulator.app /Applications/iOS\ Simulator.app

echo 'Add a spacer to the left side of the Dock (where the applications are)'
#defaults write com.apple.dock persistent-apps -array-add '{tile-data={}; tile-type="spacer-tile";}'
echo 'Add a spacer to the right side of the Dock (where the Trash is)'
#defaults write com.apple.dock persistent-others -array-add '{tile-data={}; tile-type="spacer-tile";}'

echo Hot corners
echo Possible values:
echo  0: no-op
echo  2: Mission Control
echo  3: Show application windows
echo  4: Desktop
echo  5: Start screen saver
echo  6: Disable screen saver
echo  7: Dashboard
echo 10: Put display to sleep
echo 11: Launchpad
echo 12: Notification Center
echo Top left screen corner → Mission Control
defaults write com.apple.dock wvous-tl-corner -int 2
defaults write com.apple.dock wvous-tl-modifier -int 0
echo Top right screen corner → Desktop
defaults write com.apple.dock wvous-tr-corner -int 4
defaults write com.apple.dock wvous-tr-modifier -int 0
echo Bottom left screen corner → Start screen saver
defaults write com.apple.dock wvous-bl-corner -int 5
defaults write com.apple.dock wvous-bl-modifier -int 0
echo Bottom right screen corner → Start screen saver
defaults write com.apple.dock wvous-br-corner -int 5
defaults write com.apple.dock wvous-br-modifier -int 0

###############################################################################
echo Safari & WebKit                                                             #
###############################################################################

echo 'Set Safari’s home page to `about:blank` for faster loading'
defaults write com.apple.Safari HomePage -string "about:blank"

echo 'Prevent Safari from opening ‘safe’ files automatically after downloading'
defaults write com.apple.Safari AutoOpenSafeDownloads -bool false

echo Allow hitting the Backspace key to go to the previous page in history
defaults write com.apple.Safari com.apple.Safari.ContentPageGroupIdentifier.WebKit2BackspaceKeyNavigationEnabled -bool true

echo Hide Safari’s bookmarks bar by default
defaults write com.apple.Safari ShowFavoritesBar -bool false

echo Disable Safari’s thumbnail cache for History and Top Sites
defaults write com.apple.Safari DebugSnapshotsUpdatePolicy -int 2

echo Enable Safari’s debug menu
defaults write com.apple.Safari IncludeInternalDebugMenu -bool true

echo Make Safari’s search banners default to Contains instead of Starts With
defaults write com.apple.Safari FindOnPageMatchesWordStartsOnly -bool false

echo Remove useless icons from Safari’s bookmarks bar
defaults write com.apple.Safari ProxiesInBookmarksBar "()"

echo Enable the Develop menu and the Web Inspector in Safari
defaults write com.apple.Safari IncludeDevelopMenu -bool true
defaults write com.apple.Safari WebKitDeveloperExtrasEnabledPreferenceKey -bool true
defaults write com.apple.Safari com.apple.Safari.ContentPageGroupIdentifier.WebKit2DeveloperExtrasEnabled -bool true

echo Add a context menu item for showing the Web Inspector in web views
defaults write NSGlobalDomain WebKitDeveloperExtras -bool true

###############################################################################
'echo iTunes (pre-iTunes 11 only)'
###############################################################################

echo Disable the iTunes store link arrows
defaults write com.apple.iTunes show-store-link-arrows -bool false

echo Disable the Genius sidebar in iTunes
defaults write com.apple.iTunes disableGeniusSidebar -bool true

echo Disable radio stations in iTunes
defaults write com.apple.iTunes disableRadio -bool true

echo Make ⌘ + F focus the search input in iTunes
echo To use these commands in another language, browse iTunes’s package contents,
echo open `Contents/Resources/your-language.lproj/Localizable.strings`, and look
echo for `kHiddenMenuItemTargetSearch`.
defaults write com.apple.iTunes NSUserKeyEquivalents -dict-add "Target Search Field" "@F"

###############################################################################
echo Mail                                                                        #
###############################################################################

echo Disable send and reply animations in Mail.app
defaults write com.apple.mail DisableReplyAnimations -bool true
defaults write com.apple.mail DisableSendAnimations -bool true

echo Copy email addresses as `foo@example.com` instead of `Foo Bar <foo@example.com>` in Mail.app
defaults write com.apple.mail AddressesIncludeNameOnPasteboard -bool false

echo Add the keyboard shortcut ⌘ + Enter to send an email in Mail.app
defaults write com.apple.mail NSUserKeyEquivalents -dict-add "Send" "@\\U21a9"

###############################################################################
echo Terminal                                                                    #
###############################################################################

echo Only use UTF-8 in Terminal.app
defaults write com.apple.terminal StringEncodings -array 4

echo Use a modified version of the Pro theme by default in Terminal.app
if [[ -f "${HOME}/init/Mathias.terminal" ]]; then
   open "$HOME/init/Mathias.terminal"
  sleep 1 # Wait a bit to make sure the theme is loaded
  defaults write com.apple.terminal "Default Window Settings" -string "Mathias"
  defaults write com.apple.terminal "Startup Window Settings" -string "Mathias"
fi

echo Enable “focus follows mouse” for Terminal.app and all X11 apps
echo i.e. hover over a window and start typing in it without clicking first
#defaults write com.apple.terminal FocusFollowsMouse -bool true
#defaults write org.x.X11 wm_ffm -bool true

###############################################################################
echo Time Machine                                                                #
###############################################################################

echo Prevent Time Machine from prompting to use new hard drives as backup volume
defaults write com.apple.TimeMachine DoNotOfferNewDisksForBackup -bool true

echo Disable local Time Machine backups
hash tmutil &> /dev/null && sudo tmutil disablelocal

###############################################################################
echo Address Book, Dashboard, iCal, TextEdit, and Disk Utility                   #
###############################################################################

echo Enable the debug menu in Address Book
defaults write com.apple.addressbook ABShowDebugMenu -bool true

echo 'Enable Dashboard dev mode (allows keeping widgets on the desktop)'
defaults write com.apple.dashboard devmode -bool true

echo 'Enable the debug menu in iCal (pre-10.8)'
defaults write com.apple.iCal IncludeDebugMenu -bool true

echo Use plain text mode for new TextEdit documents
defaults write com.apple.TextEdit RichText -int 0
echo Open and save files as UTF-8 in TextEdit
defaults write com.apple.TextEdit PlainTextEncoding -int 4
defaults write com.apple.TextEdit PlainTextEncodingForWrite -int 4

echo Enable the debug menu in Disk Utility
defaults write com.apple.DiskUtility DUDebugMenuEnabled -bool true
defaults write com.apple.DiskUtility advanced-image-options -bool true

###############################################################################
echo Mac App Store                                                               #
###############################################################################

echo Enable the WebKit Developer Tools in the Mac App Store
defaults write com.apple.appstore WebKitDeveloperExtras -bool true

echo Enable Debug Menu in the Mac App Store
defaults write com.apple.appstore ShowDebugMenu -bool true

###############################################################################
echo Google Chrome & Google Chrome Canary                                        #
###############################################################################

echo Allow installing user scripts via GitHub or Userscripts.org
defaults write com.google.Chrome ExtensionInstallSources -array "https://*.github.com/*" "http://userscripts.org/*"
defaults write com.google.Chrome.canary ExtensionInstallSources -array "https://*.github.com/*" "http://userscripts.org/*"

###############################################################################
echo SizeUp.app                                                                  #
###############################################################################

if [[ -d "/Applications/SizeUp.app" ]]; then
  echo Start SizeUp at login
  defaults write com.irradiatedsoftware.SizeUp StartAtLogin -bool true

  echo Don’t show the preferences window on next start
  defaults write com.irradiatedsoftware.SizeUp ShowPrefsOnNextStart -bool false
fi

###############################################################################
echo Transmission.app                                                            #
###############################################################################

if [[ -d "/Applications/Transmission.app" ]]; then
  echo Use `~/Documents/Torrents` to store incomplete downloads
  defaults write org.m0k.transmission UseIncompleteDownloadFolder -bool true
  defaults write org.m0k.transmission IncompleteDownloadFolder -string "${HOME}/Documents/Torrents"

  echo Don’t prompt for confirmation before downloading
  defaults write org.m0k.transmission DownloadAsk -bool false

  echo Trash original torrent files
  defaults write org.m0k.transmission DeleteOriginalTorrent -bool true

  echo Hide the donate message
  defaults write org.m0k.transmission WarningDonate -bool false
  echo Hide the legal disclaimer
  defaults write org.m0k.transmission WarningLegal -bool false
fi

###############################################################################
echo Twitter.app                                                                 #
###############################################################################

if [[ -d "/Applications/Twitter.app" ]]; then
  echo Disable smart quotes as it’s annoying for code tweets
  defaults write com.twitter.twitter-mac AutomaticQuoteSubstitutionEnabled -bool false

  echo Show the app window when clicking the menu icon
  defaults write com.twitter.twitter-mac MenuItemBehavior -int 1

  echo Enable the hidden ‘Develop’ menu
  defaults write com.twitter.twitter-mac ShowDevelopMenu -bool true

  echo Open links in the background
  defaults write com.twitter.twitter-mac openLinksInBackground -bool true

  echo Allow closing the ‘new tweet’ window by pressing `Esc`
  defaults write com.twitter.twitter-mac ESCClosesComposeWindow -bool true

  echo Show full names rather than Twitter handles
  defaults write com.twitter.twitter-mac ShowFullNames -bool true

  echo Hide the app in the background if it’s not the front-most window
  defaults write com.twitter.twitter-mac HideInBackground -bool true
fi

###############################################################################
echo Kill affected applications                                                  #
###############################################################################

for app in "Address Book" "Calendar" "Contacts" "Dashboard" "Dock" "Finder" \
	"Mail" "Safari" "SizeUp" "SystemUIServer" "Terminal" "Transmission" \
	"Twitter" "iCal" "iTunes"; do
	killall "$app" > /dev/null 2>&1
done
echo "Done. Note that some of these changes require a logout/restart to take effect."
